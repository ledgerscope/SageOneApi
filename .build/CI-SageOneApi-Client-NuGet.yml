# Pipeline for building our SageOneApi.Client NuGet

#trigger: none
trigger:
  branches:
    include:
    - refs/heads/master
  batch: True

variables:
  buildConfiguration: 'Debug'
  packageVersion: 1.0.$(Build.BuildId)
# Variable 'PFXHash' is defined in the Variables tab
# Variable 'PasswordForPFXfile' is defined in the Variables tab

jobs:

- job: Phase_1
  displayName: Build, test, and deploy
  cancelTimeoutInMinutes: 1
  pool:
    vmImage: windows-latest
  steps:

  - script: |
      echo 'Right, off we go then'
      echo 'Build.BuildNumber: $(Build.BuildNumber)'
      echo 'buildConfiguration: $(buildConfiguration)'
      echo 'packageVersion: $(packageVersion)'
      echo 'Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)'
      echo 'Pipeline.Workspace: $(Pipeline.Workspace)'
      echo 'System.DefaultWorkingDirectory: $(System.DefaultWorkingDirectory)'
    displayName: Debug print variables.

  - checkout: self

  - task: DownloadSecureFile@1
    displayName: Download secure file
    inputs:
      secureFile: e4a99c4f-86be-4d7f-a331-df06b41dc8d4
      retryCount: 5

  - task: PowerShell@2
    displayName: Install PFX
    inputs:
      targetType: inline
      script: >-
        $password = "$(PasswordForPFXfile)" | ConvertTo-SecureString -AsPlainText -Force

        Import-PfxCertificate -FilePath "$(Agent.WorkFolder)\_temp\LS Code 2019.pfx" -CertStoreLocation Cert:\CurrentUser\My -Password $password

  - task: NuGetToolInstaller@1
    displayName: Use NuGet
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    name: NuGetCommand1
    displayName: Do NuGet restores
    inputs:
      solution: SageOneApi.sln
      searchPatternPush: $(Build.ArtifactStagingDirectory)/*.nupkg

  - task: VSBuild@1
    name: VSBuild2
    displayName: Build SageOneApi.sln solution
    inputs:
      solution: SageOneApi.sln
      configuration: '$(buildConfiguration)'

# Having set GeneratePackageOnBuild in the project config, there's no need for a separate NuGet build step.

  - task: VSTest@2
    displayName: Run tests
    inputs:
      testSelector: testAssemblies
      testAssemblyVer2: '**\bin\Debug\*\SageOneApi.Tests.dll'
      minimumExpectedTests: '1'

  - task: CopyFiles@2
    displayName: Copy the emitted package to our artifacts folder
    inputs:
      SourceFolder: 'SageOneApi.Client/bin/$(BuildConfiguration)'
      Contents: '*.*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\mybin'
    continueOnError: true
    enabled: true

  - powershell: gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt
    displayName: Debug print environment variables

  - powershell: Get-ChildItem -Path $env:PIPELINE_WORKSPACE -recurse | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/directory-structure.txt
    displayName: Debug print directory structure and files

  - task: PublishBuildArtifacts@1
    displayName: Publish 'drop' artifacts
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: drop

  - task: NuGetCommand@2
    name: NuGetCommand4
    displayName: Push package to our NuGet feed
    inputs:
      command: push
      searchPatternPush: '$(Build.ArtifactStagingDirectory)\**\SageOneApi*.nupkg'
      feedPublish: aeaa4311-673f-4791-a14d-d19ad82f0603
